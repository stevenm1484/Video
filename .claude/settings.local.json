{
  "permissions": {
    "allow": [
      "Bash(/var/www/videomonitoring/venv/bin/python3:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE cameras SET rtsp_url = ''rtsp://user:Assi182311@50.74.105.34:7001/0a271a2f-53cc-37ef-7930-923ab382d6df?stream=1&'' WHERE id = 2;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, rtsp_url, default_image_path FROM cameras WHERE id = 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT check_time, check_type, image_change_detected, image_change_percentage FROM camera_vital_signs_checks WHERE camera_id = 5 ORDER BY check_time DESC LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, default_image_path FROM cameras WHERE default_image_path IS NOT NULL AND id != 5 LIMIT 3;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, default_image_path FROM cameras WHERE id = 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE cameras SET default_image_path = ''uploads/vital_signs_snapshots/camera_2_20251012_195303.jpg'' WHERE id = 5; SELECT id, name, default_image_path FROM cameras WHERE id = 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\n-- Restore the original baseline for camera 5\nUPDATE cameras \nSET default_image_path = ''uploads/vital_signs_snapshots/camera_5_20251012_195310.jpg'' \nWHERE id = 5;\n\nSELECT id, name, default_image_path FROM cameras WHERE id = 5;\n\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, check_type, check_time, image_change_detected, image_change_percentage, previous_image_path, current_image_path FROM camera_vital_signs_checks WHERE camera_id = 5 AND check_type = ''image_change'' ORDER BY check_time DESC LIMIT 3;\")",
      "Bash(chmod:*)",
      "Bash(md5sum:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\nSELECT \n    c.id as camera_id,\n    c.name as camera_name,\n    vs.image_change_status,\n    vs.image_change_percentage,\n    vsc.previous_image_path,\n    vsc.current_image_path,\n    vsc.check_time\nFROM cameras c\nJOIN camera_vital_signs_status vs ON c.id = vs.camera_id\nLEFT JOIN camera_vital_signs_checks vsc ON c.id = vsc.camera_id AND vsc.check_type = ''image_change''\nWHERE c.id = 5\nORDER BY vsc.check_time DESC\nLIMIT 1;\n\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\n-- Set camera 5 back to changed status\nUPDATE camera_vital_signs_status \nSET image_change_status = ''changed'', \n    image_change_percentage = 85\nWHERE camera_id = 5;\n\n-- Verify\nSELECT camera_id, image_change_status, image_change_percentage FROM camera_vital_signs_status WHERE camera_id = 5;\n\")",
      "Bash(sudo pkill:*)",
      "Bash(ps:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT DISTINCT role_type, access_level FROM users WHERE role_type IS NOT NULL LIMIT 10;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"ALTER TABLE users ADD COLUMN IF NOT EXISTS phone_dialing_enabled BOOLEAN DEFAULT TRUE;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, sip_extension, phone_dialing_enabled FROM users WHERE sip_extension IS NOT NULL LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, sip_extension, phone_dialing_enabled FROM users WHERE username = ''steven'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, role, role_type, access_level FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE users SET role = ''superadmin'', role_type = ''superadmin'', access_level = ''superadmin'' WHERE username = ''admin''; SELECT id, username, role, role_type, access_level FROM users WHERE username = ''admin'';\")",
      "Bash(npm run build:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, account_number, dealer_id FROM accounts LIMIT 10;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, account_number, dealer_id FROM video_accounts LIMIT 10;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, group_id FROM dealers;\")",
      "Bash(cat:*)",
      "Bash(systemctl status:*)",
      "Bash(service nginx:*)",
      "Read(//etc/nginx/conf.d/**)",
      "Bash(sudo nginx:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, role, role_type, access_level FROM users WHERE username = ''admin'' OR id = 1 LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT DISTINCT role, role_type, access_level FROM users WHERE role IS NOT NULL LIMIT 20;\")",
      "Bash(curl:*)",
      "Bash(journalctl:*)",
      "Read(//proc/738863/fd/**)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name FROM cameras WHERE name = ''Front Door'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, rtsp_url FROM cameras WHERE name = ''Front Door'';\")",
      "Read(//mnt/media/uploads/**)",
      "Bash(ffmpeg:*)",
      "Bash(sudo lsof:*)",
      "Bash(ss:*)",
      "Bash(sudo systemctl stop:*)",
      "Read(//tmp/**)",
      "Bash(sudo systemctl start:*)",
      "Bash(sudo systemctl status:*)",
      "Read(//etc/systemd/system/**)",
      "Read(//var/log/**)",
      "Bash(sudo systemctl restart:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE users SET role = ''super_admin'', role_type = ''super_admin'', access_level = ''super_admin'' WHERE username = ''admin''; SELECT id, username, role, role_type, access_level FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, rtsp_url, rtsp_username, rtsp_password FROM cameras WHERE name = ''Front Door'';\")",
      "Bash(find:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\nSELECT \n    schemaname,\n    relname,\n    pg_size_pretty(pg_total_relation_size(schemaname||''.''||relname)) AS size,\n    n_live_tup as row_count\nFROM pg_stat_user_tables\nORDER BY pg_total_relation_size(schemaname||''.''||relname) DESC\nLIMIT 10;\n\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\\d alarm_events\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"CREATE INDEX IF NOT EXISTS ix_alarm_events_camera_id ON alarm_events(camera_id);\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE users SET phone_dialing_enabled = false WHERE username = ''admin''; SELECT id, username, phone_dialing_enabled, sip_extension FROM users WHERE username = ''admin'';\")",
      "Bash(python3:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE users SET hashed_password = ''$2b$12$G49TPMrYo9yD2lEc6O0LauypVir/sJRX6anixNuNRJbaidZTziO2.'' WHERE username = ''admin''; SELECT username, role FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE users SET role = ''super_admin'', role_type = ''super_admin'', access_level = ''super_admin'' WHERE username = ''admin''; SELECT username, role, role_type, access_level FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT username, role, role_type, access_level FROM users WHERE username = ''admin'';\")",
      "Bash(sudo journalctl:*)",
      "Bash(sudo cat:*)",
      "Bash(sudo tail:*)",
      "Bash(netstat:*)",
      "Bash(awk:*)",
      "Read(//mnt/media/streams/**)",
      "Read(//mnt/media/streams/1/**)",
      "Bash(redis-cli:*)",
      "Bash(python:*)",
      "Bash(sudo yum install:*)",
      "Bash(sudo systemctl enable:*)",
      "Bash(redis6-cli:*)",
      "Bash(timeout:*)",
      "Bash(for cam_id in 1 2 4 5 6)",
      "Bash(do if [ -d \"/mnt/media/streams/$cam_id\" ])",
      "Bash(then echo \"=== Camera $cam_id ===\" ls -lh /mnt/media/streams/$cam_id/*.ts)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, rtsp_url FROM cameras WHERE id IN (1, 6);\")",
      "Bash(top:*)",
      "Bash(nvidia-smi:*)",
      "Bash(/usr/local/bin/ffmpeg -hwaccels)",
      "Bash(/usr/local/bin/ffmpeg -hide_banner -hwaccel cuda -c:v h264_cuvid -i rtsp://user:Assi182311@50.74.105.34:7001/ee73a965-487a-c72c-07b0-8ab1103c9432?stream=0 -t 2 -f null -)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, role_type, access_level, dealer_id FROM users WHERE username = ''steven'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name FROM dealers WHERE name LIKE ''%Briscoe%'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE users SET dealer_id = 3 WHERE username = ''steven''; SELECT id, username, role_type, access_level, dealer_id FROM users WHERE username = ''steven'';\")",
      "Bash(PGPASSWORD:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, role_type, access_level, dealer_id, dealer_ids, group_ids, customer_ids FROM users WHERE username = ''steven'';\")",
      "Bash(sudo netstat:*)",
      "Bash(sudo ss:*)",
      "Bash(sudo grep -i \"smtp\" /proc/797407/fd/2)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, timestamp, media_type, status FROM alarm_events WHERE media_type = ''alert'' ORDER BY timestamp DESC LIMIT 15;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT camera_id, connectivity_status, connectivity_alert_sent, connectivity_alert_sent_at, connectivity_consecutive_failures FROM camera_vital_signs_status WHERE camera_id = 8;\")",
      "Bash(sudo grep -E \"(SMTP|smtp|thread|Thread)\" /var/log/videomonitoring-error.log)",
      "Bash(sudo systemctl:*)",
      "Bash(sudo grep -E \"(Fatal|FATAL|Segmentation|core dumped|killed)\" /var/log/videomonitoring-error.log)",
      "Bash(/usr/local/bin/ffmpeg:*)",
      "Read(//proc/820235/**)",
      "Read(//proc/826757/**)",
      "Bash(xargs:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\\d cameras\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\\d video_accounts\")",
      "Bash(sudo grep -A 20 \"19:36:5\" /var/log/videomonitoring-error.log)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, caller_id_num, call_uniqueid, parked_slot, call_status, timestamp FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, inbound_phone_number FROM video_accounts WHERE name ILIKE ''%doorman%'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE alarm_events SET parked_slot = ''71'' WHERE id = 363; SELECT id, caller_id_num, parked_slot, call_status FROM alarm_events WHERE id = 363;\")",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, caller_id_num, parked_slot, call_status, call_retrieved_at, call_retrieved_by FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, caller_id_num, parked_slot, call_status, call_retrieved_at, call_retrieved_by, timestamp FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 3;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, sip_extension FROM users WHERE username = ''admin'' OR username = ''steven'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, caller_id_num, parked_slot, call_status, timestamp FROM alarm_events ORDER BY timestamp DESC LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, caller_id_num, parked_slot, call_status, call_uniqueid FROM alarm_events WHERE id = 368;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, event_id, status, created_at FROM alarms WHERE event_id = 368;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, caller_id_num, parked_slot, call_status, timestamp FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 3;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, event_id, status, created_at FROM alarms WHERE event_id = 370;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, parked_slot, call_status, timestamp FROM alarm_events WHERE id = 373;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, sip_extension FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, username, sip_extension, sip_password IS NOT NULL as has_password FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, media_type, parked_slot, caller_id_num, call_status FROM alarm_events WHERE id = 368;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 3;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT a.id as alarm_id, a.event_id, a.status, a.resolution, ae.media_type, ae.media_paths FROM alarms a JOIN alarm_events ae ON a.event_id = ae.id WHERE ae.media_type = ''call'' ORDER BY a.created_at DESC LIMIT 5;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths FROM alarm_events WHERE id = 368;\")",
      "Bash(sudo grep -A 5 \"Capturing 5-second video\" /var/log/videomonitoring-error.log)",
      "Bash(sudo grep:*)",
      "Bash(/var/www/videomonitoring/venv/bin/pip install paramiko)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths, call_uniqueid, timestamp FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 3;\")",
      "Bash(ssh-keygen:*)",
      "Read(//home/ec2-user/.ssh/**)",
      "Bash(ssh:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths, call_uniqueid, timestamp FROM alarm_events ORDER BY timestamp DESC LIMIT 3;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths, call_uniqueid, timestamp FROM alarm_events ORDER BY timestamp DESC LIMIT 2;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths FROM alarm_events WHERE id = 387;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths FROM alarm_events WHERE media_type = ''call'' ORDER BY timestamp DESC LIMIT 1;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, camera_id, media_type, media_paths FROM alarm_events WHERE id = 389;\")",
      "Read(//mnt/media/**)",
      "WebSearch",
      "WebFetch(domain:controlbyweb.com)",
      "Bash(/var/www/videomonitoring/venv/bin/pip list)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"ALTER TABLE tools ADD COLUMN IF NOT EXISTS account_id INTEGER REFERENCES video_accounts(id);\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"CREATE INDEX IF NOT EXISTS ix_tools_account_id ON tools(account_id);\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, phone_number, email, sms_enabled, email_enabled FROM tenants LIMIT 10;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, action_plan FROM video_accounts WHERE name LIKE ''%Doorman%'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"UPDATE video_accounts SET action_plan = ''[]'' WHERE name = ''Video Doorman''; SELECT id, name, action_plan FROM video_accounts WHERE name = ''Video Doorman'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\\d tools\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, tool_type, config FROM tools WHERE tool_type = ''controlbyweb'' LIMIT 2;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\nALTER TABLE cameras \nADD COLUMN IF NOT EXISTS associated_tool_id INTEGER REFERENCES tools(id),\nADD COLUMN IF NOT EXISTS associated_relay_number INTEGER;\n\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = ''cameras'' AND column_name LIKE ''%tool%'' OR column_name LIKE ''%relay%'';\n\")",
      "Bash(npm install:*)",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, rtsp_url, rtsp_username, rtsp_password FROM cameras WHERE id = 1;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name FROM video_accounts WHERE name LIKE ''%Doorman%'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, actions FROM tool_groups WHERE account_id = 1 AND name = ''Doorman'';\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT id, name, tool_type, config FROM tools WHERE account_id = 1 ORDER BY id;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"SELECT actions FROM tool_groups WHERE id = 1;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"ALTER TABLE tools ADD COLUMN IF NOT EXISTS hide_in_alarm_view BOOLEAN DEFAULT FALSE;\")",
      "Bash(PGPASSWORD='ZUzXgq<<5sivAc4fSeX|~c|#s~#C' psql -h monitoringdata.cluster-cpgkyg2y2s1h.us-west-2.rds.amazonaws.com -U postgres -d videomonitoring -c \"\n-- Add new column for multiple tool associations\nALTER TABLE cameras \nADD COLUMN IF NOT EXISTS associated_actions JSON DEFAULT ''[]'';\n\n-- Verify the column was added\nSELECT column_name, data_type, column_default \nFROM information_schema.columns \nWHERE table_name = ''cameras'' \nAND column_name = ''associated_actions'';\n\")"
    ],
    "deny": [],
    "ask": []
  }
}
